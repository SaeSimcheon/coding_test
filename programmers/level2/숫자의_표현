# 한 숫자를 연속적인 자연수로 표현하는 방법
# 자기 자신도 가능
# 그 값의 2로 나눈 몫까지만 찾으면 되는 것 같음.
# 가장 쉽게 떠올릴 수 있는 방법은 시작점 1, 2, 3, ,4 ,5 ... 그렇게 해서 연속하는 수를 계속 합해서 구하는 것.
# 그 값의 2로 나눈 몫까지만 더하면 답이 되는지 알 수 있음. 그 전에 끝나거나

# 이거 이분탐색 ?? dynamic programming / dfs bfs / greedy search
# 정렬 / 그래프 탐색

# 반복문 2개로 1부터 시작해서 n//2까지 탐색하는데 
# 안에 있는 반복문은 자기자신에서 시작해서 탐색하면 됨.

def solution(n):
    answer = 1 # 자기자신
    # range로 sum 될까? 됨.
    print(sum(range(0,10)))
    # 몫
    print(n//2)
    # 나머지
    print(n%2)
    for i in range(1,n // 2+1): # 2로 나눈 몫까지 시작점으로 삼기 위해서는 1을 더해야함.
        candidate =0
        for j in range(i,n//2+2): # 2로 나눈 몫의 경우에 적어도 그 값보다 1이 큰 경우까지 따지기 위해서는 n//2+2
            candidate += j
            if candidate > n : # 수를 더하는 도중에 만약 n 보다 크다면 안의 반복문을 멈춤.
                break
            if candidate == n : 
                print(i)
                answer+=1
                break
            
    
    
    return answer
